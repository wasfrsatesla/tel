import os
import telebot
from telebot import types

API_TOKEN = '7817440343:AAFEAXnRaRxv3STLGx5N9_8kBasy4fvvFLw'
OWNER_ID = 960173511  # ุจุฏูููุง ุจูุนุฑู ุงูุชููุฌุฑุงู ูุงูู

bot = telebot.TeleBot(API_TOKEN)

# ุชุฎุฒูู ุฑุณุงุฆู ุงููุณุชุฎุฏููู ุงููู ูุญุชุงุฌูู ุฑุฏูุฏ
pending_messages = {}

# ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุจุตูุฑุฉ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = "ูุฑุญุจุงู ุจูู ูู ุจูุช ุงูุชูุงุตู! ุดููู ุฃฺฏุฏุฑ ุฃุณุงุนุฏู ุงููููุ"
    bot.send_photo(message.chat.id, photo='https://telegra.ph/-01-26-17917', caption=welcome_text)

# ุงูุชุนุงูู ูุน ุฃูุฑ ุงููุณุงุนุฏุฉ
@bot.message_handler(commands=['help'])
def send_help(message):
    if message.from_user.id == OWNER_ID:
        help_text = """
        ูุงู ูู ุงูุฃูุงูุฑ ุงูู ุชูุฏุฑ ุชุณุชุฎุฏููุง:
        /start - ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        /help - ูุงุฆูุฉ ุงูุฃูุงูุฑ
        /broadcast [ุฑุณุงูุฉ] - ูุดุฑ ุฑุณุงูุฉ ููู ุงููุณุชุฎุฏููู

        ููุงูู ููุจูุช ุชูุฏุฑ ุชุณูู ูุงู ุงูุฃููุฑ:
        1๏ธโฃ ุชุฑุฏ ุนูู ุฃู ุฑุณุงูุฉ ูุญููุฉ ุฅููู
        2๏ธโฃ ุชุฑุฏ ุนูู ุงูุฅุดุนุงุฑ ุงูู ูุธูุฑ ุชุญุช ุงูุฑุณุงุฆู ุงููุญููุฉ
        3๏ธโฃ ุชุณุชุฎุฏู ุงูุฃูุฑ /reply [ูุนุฑู ุงูุฑุณุงูุฉ] [ุงููุต]
        """
    else:
        help_text = """
        ูุงู ูู ุงูุฃูุงูุฑ ุงูู ุชูุฏุฑ ุชุณุชุฎุฏููุง:
        /start - ุฑุณุงูุฉ ุงูุชุฑุญูุจ
        /help - ูุงุฆูุฉ ุงูุฃูุงูุฑ
        
        ุฑุณุงูุชู ุฑุงุญ ุชูุฑุณู ูููุณุคูู ุญุชู ูุฑุฏ ุนููู.
        """
    bot.send_message(message.chat.id, help_text)

# ุฃูุฑ ููุจุซ ูู ูุจู ุงููุณุคูู
@bot.message_handler(commands=['broadcast'])
def broadcast(message):
    if message.from_user.id != OWNER_ID:
        bot.reply_to(message, "ุขุณูุ ุจุณ ูุงูู ุญู ุชุณุชุฎุฏู ูุฐุง ุงูุฃูุฑ.")
        return

    broadcast_text = message.text.replace('/broadcast ', '', 1)
    if not broadcast_text:
        bot.reply_to(message, "ูุงุฒู ุชูุชุจ ุฑุณุงูุฉ ููุจุซ!")
        return

    # ูุงู ุงูุญุงูุฉ ุชูุฏุฑ ุชุจุซ ุงูุฑุณุงูุฉ ูุฌููุน ุงููุณุชุฎุฏููู ูู ูุงู ุนูุฏู ูุงุนุฏุฉ ุจูุงูุงุช
    bot.reply_to(message, f"ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุงูุจุซ: {broadcast_text}")

# ุฃูุฑ ุงูุฑุฏ ุนูู ุฑุณุงุฆู ูุนููุฉ ูู ูุจู ุงููุณุคูู
@bot.message_handler(commands=['reply'])
def reply_command(message):
    if message.from_user.id != OWNER_ID:
        bot.reply_to(message, "ุขุณูุ ุจุณ ูุงูู ุญู ุชุณุชุฎุฏู ูุฐุง ุงูุฃูุฑ.")
        return

    try:
        # ุงุณุชุฎุฑุงุฌ ูุนุฑู ุงูุฑุณุงูุฉ ูุงููุต ุงููุทููุจ ุงูุฑุฏ ุนููู
        parts = message.text.split(' ', 2)
        if len(parts) < 3:
            bot.reply_to(message, "ุงุณุชุฎุฏุงู: /reply [ูุนุฑู ุงูุฑุณุงูุฉ] [ุงููุต]")
            return
        
        message_id = parts[1]
        reply_text = parts[2]
        
        if message_id in pending_messages:
            user_id = pending_messages[message_id]['user_id']
            original_msg_id = pending_messages[message_id]['message_id']
            
            # ุฅุฑุณุงู ุงูุฑุฏ ูููุณุชุฎุฏู ูุฅุฌุงุจุฉ ูุจุงุดุฑุฉ ุนูู ุฑุณุงูุชู ุงูุฃุตููุฉ
            bot.send_message(user_id, reply_text, reply_to_message_id=original_msg_id)
            bot.reply_to(message, "ุชู ุฅุฑุณุงู ุงูุฑุฏ ุจูุฌุงุญ!")
        else:
            bot.reply_to(message, "ูุนุฑู ุงูุฑุณุงูุฉ ุบูุฑ ููุฌูุฏ.")
    except Exception as e:
        bot.reply_to(message, f"ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุฏ: {str(e)}")

# ุงูุชุนุงูู ูุน ุงูุฑุณุงุฆู ุงููุงุฑุฏุฉ
@bot.message_handler(content_types=['text', 'photo', 'video', 'document', 'audio', 'voice', 'sticker', 'animation'])
def handle_all_messages(message):
    # ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุฑุฏ ูู ุงููุงูู
    if message.reply_to_message and message.from_user.id == OWNER_ID:
        # ุฃููุงู ูุชุญูู ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุงููุญููุฉ ูู ูุณุชุฎุฏู
        if hasattr(message.reply_to_message, 'forward_from') and message.reply_to_message.forward_from is not None:
            user_id = message.reply_to_message.forward_from.id
            # ุฅุนุงุฏุฉ ุฅุฑุณุงู ุฑุฏ ุงููุงูู ูููุณุชุฎุฏู
            try:
                original_msg_id = message.reply_to_message.forward_from_message_id

                if message.content_type == 'text':
                    bot.send_message(user_id, message.text, reply_to_message_id=original_msg_id)
                elif message.content_type == 'photo':
                    bot.send_photo(user_id, message.photo[-1].file_id, caption=message.caption, reply_to_message_id=original_msg_id)
                elif message.content_type == 'video':
                    bot.send_video(user_id, message.video.file_id, caption=message.caption, reply_to_message_id=original_msg_id)
                elif message.content_type == 'document':
                    bot.send_document(user_id, message.document.file_id, caption=message.caption, reply_to_message_id=original_msg_id)
                elif message.content_type == 'audio':
                    bot.send_audio(user_id, message.audio.file_id, caption=message.caption, reply_to_message_id=original_msg_id)
                elif message.content_type == 'voice':
                    bot.send_voice(user_id, message.voice.file_id, caption=message.caption, reply_to_message_id=original_msg_id)
                elif message.content_type == 'sticker':
                    bot.send_sticker(user_id, message.sticker.file_id, reply_to_message_id=original_msg_id)
                elif message.content_type == 'animation':
                    bot.send_animation(user_id, message.animation.file_id, caption=message.caption, reply_to_message_id=original_msg_id)

                bot.reply_to(message, "โ ุชู ุฅุฑุณุงู ุงูุฑุฏ ูููุณุชุฎุฏู!")
                return
            except Exception as e:
                bot.reply_to(message, f"โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฑุฏ: {str(e)}")
                return

    # ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ูู ูุณุชุฎุฏู ุนุงุฏู ุฃู ูุด ุฑุฏ
    if message.from_user.id != OWNER_ID:
        # ุชูููุฏ ูุนุฑู ูุฑูุฏ ููุฐู ุงูุฑุณุงูุฉ
        unique_id = f"{message.chat.id}_{message.message_id}"
        
        # ุชุฎุฒูู ูุนูููุงุช ุงูุฑุณุงูุฉ ููุฑุฏ ุนูููุง ูุงุญูุงู
        pending_messages[unique_id] = {
            'user_id': message.chat.id,
            'message_id': message.message_id
        }

        try:
            # ุชุญููู ุงูุฑุณุงูุฉ ูููุณุคูู
            forwarded = bot.forward_message(OWNER_ID, message.chat.id, message.message_id)

            # ุฅูุดุงุก ุฅุดุนุงุฑ ููุธู ููุถุญ ููููุฉ ุงูุฑุฏ ุงููุจุงุดุฑ
            user_name = message.from_user.first_name
            if message.from_user.last_name:
                user_name += f" {message.from_user.last_name}"
            if message.from_user.username:
                user_name += f" (@{message.from_user.username})"
            
            bot.reply_to(forwarded,
                f"ูุนุฑู ุงูุฑุณุงูุฉ: {unique_id}\n"
                f"ูู: {user_name}\n"
                f"๐ฌ ุฑุฏ ูุจุงุดุฑุฉ ุนูู ูุฐู ุงูุฑุณุงูุฉ ููุฑุฏ ุนูู ุงููุณุชุฎุฏู"
            )

            # ุชุฃููุฏ ูููุณุชุฎุฏู
            bot.reply_to(message, "ุชู ุฅุฑุณุงู ุฑุณุงูุชู ูููุณุคูู. ุฑุงุญ ูุฑุฏ ุนููู ูุฑูุจุงู!")
        except Exception as e:
            bot.reply_to(message, f"ุฎุทุฃ ูู ุชุญููู ุงูุฑุณุงูุฉ: {str(e)}")
            print(f"ุฎุทุฃ ูู ุชุญููู ุงูุฑุณุงูุฉ: {e}")
    else:
        bot.reply_to(message, "ูุฑุญุจุงู ูุงูู ุงูุจูุช! ุงุณุชุฎุฏู /help ูุชุดูู ุงูุฃูุงูุฑ ุงููุชุงุญุฉ.")

# ุจุฏุก ุงูุงุณุชุนูุงู ุนู ุงูุฑุณุงุฆู
bot.polling()